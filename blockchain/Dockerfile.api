# Multi-stage Dockerfile for Tourist Rewards API Service

# Base stage with common dependencies
FROM node:18-alpine AS base
WORKDIR /app

# Install system dependencies
RUN apk add --no-cache \
    curl \
    postgresql-client \
    && rm -rf /var/cache/apk/*

# Copy package files
COPY package*.json ./
COPY tsconfig*.json ./

# Development stage
FROM base AS development
ENV NODE_ENV=development

# Install all dependencies (including dev dependencies)
RUN npm ci

# Copy source code
COPY src/ ./src/
COPY test/ ./test/
COPY contracts/ ./contracts/
COPY artifacts/ ./artifacts/

# Expose API port and debug port
EXPOSE 3000 9229

# Health check endpoint
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:3000/health || exit 1

# Default command for development (with hot reload)
CMD ["npm", "run", "dev"]

# Build stage
FROM base AS build
ENV NODE_ENV=production

# Install all dependencies for building
RUN npm ci

# Copy source code
COPY src/ ./src/
COPY contracts/ ./contracts/
COPY artifacts/ ./artifacts/

# Build the application
RUN npm run build

# Production stage
FROM base AS production
ENV NODE_ENV=production

# Install only production dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy built application from build stage
COPY --from=build /app/dist ./dist
COPY --from=build /app/artifacts ./artifacts

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S tourist-rewards -u 1001 -G nodejs

# Change ownership of app directory
RUN chown -R tourist-rewards:nodejs /app
USER tourist-rewards

# Expose API port
EXPOSE 3000

# Health check endpoint
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:3000/health || exit 1

# Default command for production
CMD ["npm", "run", "start"]